head	1.5;
access;
symbols;
locks
	ewerton.silles:1.5; strict;
comment	@ * @;


1.5
date	2020.01.24.05.37.49;	author ewerton.silles;	state Exp;
branches;
next	1.4;

1.4
date	2019.12.24.13.52.26;	author ewerton.silles;	state Exp;
branches;
next	1.3;

1.3
date	2019.11.30.04.31.06;	author ewerton.silles;	state Exp;
branches;
next	1.2;

1.2
date	2019.11.16.03.48.22;	author ewerton.silles;	state Exp;
branches;
next	1.1;

1.1
date	2019.11.14.22.25.01;	author ewerton.silles;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@/*
 * Universidade Federal do Rio de Janeiro
 * Escola Politecnica
 * Departamento de Eletronica e de Computacao
 * Prof. Marcelo Luiz Drumond Lanza
 * EEL 270 - Computacao II - Turma 2019/2
 
 * $Author: ewerton.silles $
 * $Date: 2019/12/24 13:52:26 $
 * $Log: dvfmEvsUmlErrors.h,v $
 * Revision 1.4  2019/12/24 13:52:26  ewerton.silles
 * *** empty log message ***
 *
 * Revision 1.3  2019/11/30 04:31:06  ewerton.silles
 * *** empty log message ***
 *
 * Revision 1.2  2019/11/16 03:48:22  ewerton.silles
 * *** empty log message ***
 *
 * Revision 1.1  2019/11/14 22:25:01  ewerton.silles
 * Initial revision
 * 
*/

#ifndef DVFM_EVS_UML_ERRORS_H
#define DVFM_EVS_UML_ERRORS_H "@@(#)dvfmEvsUmlErrors.h $Revision: 1.4 $"

/* ===== beginning of file code ===== */

#include			"dvfmEvsUmlTypes.h"

typedef enum 
{
	dvfmEvsUmlOk,
	dvfmEvsUmlFirstEmptyPointer,
	dvfmEvsUmlSecondEmptyPointer,
	dvfmEvsUmlThirdEmptyPointer,
	dvfmEvsUmlFourthEmptyPointer,
	dvfmEvsUmlFifthEmptyPointer,
	dvfmEvsUmlSixthEmptyPointer,
	dvfmEvsUmlPathLong,
	dvfmEvsUmlLongFilename,
	dvfmEvsUmlMinimumMaximumInverted,
	dvfmEvsUmlShortString,
	dvfmEvsUmlLongString,
	dvfmEvsUmlInvalidCharacter,
	dvfmEvsUmlShortNickname,
	dvfmEvsUmlLongNickname,
	dvfmEvsUmlPointFirstPositionNickname,
	dvfmEvsUmlPointLastPositionNickname,
	dvfmEvsUmlNoPointsNickname,
	dvfmEvsUmlTwoPointsNickname,
	dvfmEvsUmlInvalidCharacterNickname,
	dvfmEvsUmlShortEmail,
	dvfmEvsUmlLongEmail,
	dvfmEvsUmlAtFirstPositionEmail,
	dvfmEvsUmlAtLastPositionEmail,
	dvfmEvsUmlNoAtsEmail,
	dvfmEvsUmlTwoAtsEmail,
	dvfmEvsUmlInvalidCharacterEmail,
	dvfmEvsUmlUniqueName,
	dvfmEvsUmlDotInName,
	dvfmEvsUmlFormatEncryptedPassword,
	dvfmEvsUmlUnknownAlgorithm,
	dvfmEvsUmlLongFlatPassword,
	dvfmEvsUmlSecondaryFunction,
	dvfmEvsUmlAlgorithmNotFound,
	dvfmEvsUmlVoidString,
	dvfmEvsUmlInvalidEncryptedPassword,
	dvfmEvsUmlLongEncryptedPassword,
	dvfmEvsUmlIncompatiblePassword,
	dvfmEvsUmlInvalidSalt,
	dvfmEvsUmlCantOpenFile,
	dvfmEvsUmlInvalidConfigFile,
	dvfmEvsUmlReadError,
	dvfmEvsUmlShortArgument,
	dvfmEvsUmlLongtArgument,
	dvfmEvsUmlInvalidPositionOptions,
	dvfmEvsUmlFewSubOptions,
	dvfmEvsUmlInvalidSubOption,
	dvfmEvsUmlLackCompulsorySubOption,
	dvfmEvsUmlInvalidOptions,
	dvfmEvsUmlMissingSubOptions,
	dvfmEvsUmlConvertAdmimId,
	dvfmEvsUmlInvalidId,
	dvfmEvsUmlDifferentUsernameConfirmation,
	dvfmEvsUmlDifferentEmailConfirmation,
	dvfmEvsUmlDifferentPasswordConfirmation,
	dvfmEvsUmlCorruptedFile,
	dvfmEvsUmlEmptyList,
	dvfmEvsUmlUserNotFound,
	dvfmEvsUmlIncompatibleEmail,
	dvfmEvsUmlIncompatibleFullName,
	dvfmEvsUmlUserISNotResponsible,
	dvfmEvsUmlUserIsNotAdministrator,
	dvfmEvsUmlIncorrectData,
	dvfmEvsUmlIncompatibleValidationKey,
	dvfmEvsUmlSizeErrorType
} dvfmEvsUmlErrorType;

/*
 * char *
 * DvfmEvsUmlGetCliErrorMessage (dvfmEvsUmlErrorType, dvfmEvsUmlLanguageType);
 *
 * Arguments:
 * char * - language string (O)
 * dvfmEvsUmlErrorType - error code Type enum (I)
 * dvfmEvsUmlLanguageType - language code Type enum (I)
 *
 * Returned code:
 * char *
 *
 * Description:
 * This function converts the error code into an error message for interface CLI.
 */

char *
DvfmEvsUmlGetCliErrorMessage (dvfmEvsUmlErrorType,
							  dvfmEvsUmlLanguageType);

/*
 * char *
 * DvfmEvsUmlGetNcursesErrorMessage (dvfmEvsUmlErrorType, dvfmEvsUmlLanguageType);
 *
 * Arguments:
 * char * - language string (O)
 * dvfmEvsUmlErrorType - error code Type enum (I)
 * dvfmEvsUmlLanguageType - language code Type enum (I)
 *
 * Returned code:
 * char *
 *
 * Description:
 * This function converts the error code into an error message for interface Ncurses.
 */

char *
DvfmEvsUmlGetNcursesErrorMessage (dvfmEvsUmlErrorType,
								  dvfmEvsUmlLanguageType);

/*
 * char *
 * DvfmEvsUmlGetWebErrorMessage (dvfmEvsUmlErrorType, dvfmEvsUmlLanguageType);
 *
 * Arguments:
 * char * - language string (O)
 * dvfmEvsUmlErrorType - error code Type enum (I)
 * dvfmEvsUmlLanguageType - language code Type enum (I)
 *
 * Returned code:
 * char *
 *
 * Description:
 * This function converts the error code into an error message for interface Web.
 */

char *
DvfmEvsUmlGetWebErrorMessage (dvfmEvsUmlErrorType,
							  dvfmEvsUmlLanguageType);

/* ===== end of file code ====== */

#endif
/* $RCSfile: dvfmEvsUmlErrors.h,v $ */
@


1.4
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2019/11/30 04:31:06 $
d11 3
d26 1
a26 1
#define DVFM_EVS_UML_ERRORS_H "@@(#)dvfmEvsUmlErrors.h $Revision: 1.3 $"
d38 3
d71 1
a71 1
	dvfmEvsUmlIncompatibleFlatPassword,
d90 8
d118 2
a119 1
DvfmEvsUmlGetCliErrorMessage (dvfmEvsUmlErrorType, dvfmEvsUmlLanguageType);
d138 2
a139 1
DvfmEvsUmlGetNcursesErrorMessage (dvfmEvsUmlErrorType, dvfmEvsUmlLanguageType);
d158 2
a159 1
DvfmEvsUmlGetWebErrorMessage (dvfmEvsUmlErrorType, dvfmEvsUmlLanguageType);
@


1.3
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2019/11/16 03:48:22 $
d11 3
d23 1
a23 1
#define DVFM_EVS_UML_ERRORS_H "@@(#)dvfmEvsUmlErrors.h $Revision: 1.2 $"
d67 18
a84 1
	dvfmEvsUmlSizeErrorType, 
@


1.2
log
@*** empty log message ***
@
text
@d9 1
a9 1
 * $Date: 2019/11/14 22:25:01 $
d11 3
d20 1
a20 1
#define DVFM_EVS_UML_ERRORS_H "@@(#)dvfmEvsUmlErrors.h $Revision: 1.1 $"
d28 1
a28 1
	dvfmEvsUmlok,
d33 31
a63 1
	dvfmEvsUmlNameLong,
@


1.1
log
@Initial revision
@
text
@d8 6
a13 3
 * $Author$
 * $Date$
 * $Log$ 
d17 1
a17 1
#define DVFM_EVS_UML_ERRORS_H "@@(#)dvfmEvsUmlErrors.h $Revision$"
d25 6
a30 1
	ok,
d94 1
a94 1
/* $RCSfile$ */
@
